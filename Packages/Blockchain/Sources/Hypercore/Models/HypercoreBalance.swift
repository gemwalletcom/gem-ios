/*
 Generated by typeshare 1.13.2
 */

import Foundation

public struct HypercoreBalance: Codable, Equatable, Sendable {
	public let coin: String
	public let token: UInt32
	public let total: String

	public init(coin: String, token: UInt32, total: String) {
		self.coin = coin
		self.token = token
		self.total = total
	}
}

public struct HypercoreBalances: Codable, Equatable, Sendable {
	public let balances: [HypercoreBalance]

	public init(balances: [HypercoreBalance]) {
		self.balances = balances
	}
}

public struct HypercoreDelegationBalance: Codable, Equatable, Sendable {
	public let delegated: String
	public let undelegated: String
	public let totalPendingWithdrawal: String

	public init(delegated: String, undelegated: String, totalPendingWithdrawal: String) {
		self.delegated = delegated
		self.undelegated = undelegated
		self.totalPendingWithdrawal = totalPendingWithdrawal
	}
}

public struct HypercoreToken: Codable, Equatable, Sendable {
	public let name: String
	public let weiDecimals: Int32
	public let index: Int32

	public init(name: String, weiDecimals: Int32, index: Int32) {
		self.name = name
		self.weiDecimals = weiDecimals
		self.index = index
	}
}

public struct HypercoreTokens: Codable, Equatable, Sendable {
	public let tokens: [HypercoreToken]

	public init(tokens: [HypercoreToken]) {
		self.tokens = tokens
	}
}
