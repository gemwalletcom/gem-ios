/*
 Generated by typeshare 1.13.2
 */

import Foundation

public struct SuiAddStakeRequest: Codable, Sendable {
	public let senderAddress: String
	public let validatorAddress: String
	public let coins: [String]
	public let amount: String
	public let gasBudget: String

	public init(senderAddress: String, validatorAddress: String, coins: [String], amount: String, gasBudget: String) {
		self.senderAddress = senderAddress
		self.validatorAddress = validatorAddress
		self.coins = coins
		self.amount = amount
		self.gasBudget = gasBudget
	}
}

public struct SuiBatchRequest: Codable, Sendable {
	public let senderAddress: String
	public let gasBudget: String

	public init(senderAddress: String, gasBudget: String) {
		self.senderAddress = senderAddress
		self.gasBudget = gasBudget
	}
}

public struct SuiMoveCallRequest: Codable, Sendable {
	public let senderAddress: String
	public let objectId: String
	public let module: String
	public let function: String
	public let arguments: [String]
	public let gasBudget: String

	public init(senderAddress: String, objectId: String, module: String, function: String, arguments: [String], gasBudget: String) {
		self.senderAddress = senderAddress
		self.objectId = objectId
		self.module = module
		self.function = function
		self.arguments = arguments
		self.gasBudget = gasBudget
	}
}

public struct SuiPay: Codable, Sendable {
	public let txBytes: String

	public init(txBytes: String) {
		self.txBytes = txBytes
	}
}

public struct SuiPayRequest: Codable, Sendable {
	public let senderAddress: String
	public let recipientAddress: String
	public let coins: [String]
	public let gas: String?
	public let amount: String
	public let gasBudget: String

	public init(senderAddress: String, recipientAddress: String, coins: [String], gas: String?, amount: String, gasBudget: String) {
		self.senderAddress = senderAddress
		self.recipientAddress = recipientAddress
		self.coins = coins
		self.gas = gas
		self.amount = amount
		self.gasBudget = gasBudget
	}
}

public struct SuiSplitCoinRequest: Codable, Sendable {
	public let senderAddress: String
	public let coin: String
	public let splitAmounts: [String]
	public let gasBudget: String

	public init(senderAddress: String, coin: String, splitAmounts: [String], gasBudget: String) {
		self.senderAddress = senderAddress
		self.coin = coin
		self.splitAmounts = splitAmounts
		self.gasBudget = gasBudget
	}
}

public struct SuiUnstakeRequest: Codable, Sendable {
	public let senderAddress: String
	public let delegationId: String
	public let gasBudget: String

	public init(senderAddress: String, delegationId: String, gasBudget: String) {
		self.senderAddress = senderAddress
		self.delegationId = delegationId
		self.gasBudget = gasBudget
	}
}
