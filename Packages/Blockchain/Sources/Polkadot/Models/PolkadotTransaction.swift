/*
 Generated by typeshare 1.13.2
 */

import Foundation

public struct PolkadotTransactionBroadcast: Codable, Sendable {
	public let hash: String

	public init(hash: String) {
		self.hash = hash
	}
}

public struct PolkadotTransactionBroadcastError: Codable, Sendable {
	public let error: String
	public let cause: String

	public init(error: String, cause: String) {
		self.error = error
		self.cause = cause
	}
}

public struct PolkadotTransactionMaterialBlock: Codable, Sendable {
	public let height: String
	public let hash: String

	public init(height: String, hash: String) {
		self.height = height
		self.hash = hash
	}
}

public struct PolkadotTransactionMaterial: Codable, Sendable {
	public let at: PolkadotTransactionMaterialBlock
	public let genesisHash: String
	public let chainName: String
	public let specName: String
	public let specVersion: String
	public let txVersion: String

	public init(at: PolkadotTransactionMaterialBlock, genesisHash: String, chainName: String, specName: String, specVersion: String, txVersion: String) {
		self.at = at
		self.genesisHash = genesisHash
		self.chainName = chainName
		self.specName = specName
		self.specVersion = specVersion
		self.txVersion = txVersion
	}
}

public struct PolkadotTransactionPayload: Codable, Sendable {
	public let tx: String

	public init(tx: String) {
		self.tx = tx
	}
}
