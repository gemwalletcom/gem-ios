/*
 Generated by typeshare 1.12.0
 */

import Foundation

public struct TonJettonBalance: Codable, Sendable {
	public let balance: UInt64

	public init(balance: UInt64) {
		self.balance = balance
	}
}

public struct TonJettonTokenContentData: Codable, Sendable {
	public let name: String
	public let symbol: String
	public let decimals: String

	public init(name: String, symbol: String, decimals: String) {
		self.name = name
		self.symbol = symbol
		self.decimals = decimals
	}
}

public struct TonJettonTokenContent: Codable, Sendable {
	public let type: String
	public let data: TonJettonTokenContentData

	public init(type: String, data: TonJettonTokenContentData) {
		self.type = type
		self.data = data
	}
}

public struct TonJettonToken: Codable, Sendable {
	public let jetton_content: TonJettonTokenContent

	public init(jetton_content: TonJettonTokenContent) {
		self.jetton_content = jetton_content
	}
}

public struct TonTransactionOutMessage: Codable, Sendable {
	public let hash: String
	public let bounce: Bool
	public let bounced: Bool

	public init(hash: String, bounce: Bool, bounced: Bool) {
		self.hash = hash
		self.bounce = bounce
		self.bounced = bounced
	}
}

public struct TonTransactionMessage: Codable, Sendable {
	public let hash: String
	public let out_msgs: [TonTransactionOutMessage]

	public init(hash: String, out_msgs: [TonTransactionOutMessage]) {
		self.hash = hash
		self.out_msgs = out_msgs
	}
}

public struct TonMessageTransactions: Codable, Sendable {
	public let transactions: [TonTransactionMessage]

	public init(transactions: [TonTransactionMessage]) {
		self.transactions = transactions
	}
}

public struct TonTransactionId: Codable, Sendable {
	public let hash: String

	public init(hash: String) {
		self.hash = hash
	}
}

public struct TonTransaction: Codable, Sendable {
	public let transaction_id: TonTransactionId

	public init(transaction_id: TonTransactionId) {
		self.transaction_id = transaction_id
	}
}
