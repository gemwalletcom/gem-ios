/*
 Generated by typeshare 1.11.0
 */

import Foundation

public struct AptosAccount: Codable, Sendable {
	public let sequence_number: String

	public init(sequence_number: String) {
		self.sequence_number = sequence_number
	}
}

public struct AptosError: Codable, Sendable {
	public let message: String
	public let error_code: String

	public init(message: String, error_code: String) {
		self.message = message
		self.error_code = error_code
	}
}

public struct AptosGasFee: Codable, Sendable {
	public let gas_estimate: Int32
	public let prioritized_gas_estimate: Int32

	public init(gas_estimate: Int32, prioritized_gas_estimate: Int32) {
		self.gas_estimate = gas_estimate
		self.prioritized_gas_estimate = prioritized_gas_estimate
	}
}

public struct AptosLedger: Codable, Sendable {
	public let chain_id: Int32
	public let ledger_version: String

	public init(chain_id: Int32, ledger_version: String) {
		self.chain_id = chain_id
		self.ledger_version = ledger_version
	}
}

public struct AptosResource<T: Codable & Sendable>: Codable, Sendable {
	public let type: String
	public let data: T

	public init(type: String, data: T) {
		self.type = type
		self.data = data
	}
}

public struct AptosResourceCoin: Codable, Sendable {
	public let value: String

	public init(value: String) {
		self.value = value
	}
}

public struct AptosResourceBalance: Codable, Sendable {
	public let coin: AptosResourceCoin

	public init(coin: AptosResourceCoin) {
		self.coin = coin
	}
}

public struct AptosTransaction: Codable, Sendable {
	public let success: Bool
	public let gas_used: String
	public let gas_unit_price: String

	public init(success: Bool, gas_used: String, gas_unit_price: String) {
		self.success = success
		self.gas_used = gas_used
		self.gas_unit_price = gas_unit_price
	}
}

public struct AptosTransactionBroacast: Codable, Sendable {
	public let hash: String

	public init(hash: String) {
		self.hash = hash
	}
}

public enum AptosErrorCode: String, Codable, Equatable, Sendable {
	case accountNotFound = "account_not_found"
}
