/*
 Generated by typeshare 1.13.2
 */

import Foundation

public struct CardanoAggregateSumValue: Codable, Sendable {
	public let value: String?

	public init(value: String?) {
		self.value = value
	}
}

public struct CardanoAggregateSum: Codable, Sendable {
	public let sum: CardanoAggregateSumValue

	public init(sum: CardanoAggregateSumValue) {
		self.sum = sum
	}
}

public struct CardanoAggregateBalance: Codable, Sendable {
	public let aggregate: CardanoAggregateSum

	public init(aggregate: CardanoAggregateSum) {
		self.aggregate = aggregate
	}
}

public struct CardanoBalance: Codable, Sendable {
	public let address: String
	public let txHash: String
	public let index: Int32

	public init(address: String, txHash: String, index: Int32) {
		self.address = address
		self.txHash = txHash
		self.index = index
	}
}
