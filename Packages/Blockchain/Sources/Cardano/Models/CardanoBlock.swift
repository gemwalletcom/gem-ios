/*
 Generated by typeshare 1.13.2
 */

import Foundation

public struct CardanoBlock: Codable, Sendable {
	public let number: UInt64

	public init(number: UInt64) {
		self.number = number
	}
}

public struct CardanoBlockTip: Codable, Sendable {
	public let tip: CardanoBlock

	public init(tip: CardanoBlock) {
		self.tip = tip
	}
}

public struct CardanoBlockData: Codable, Sendable {
	public let cardano: CardanoBlockTip

	public init(cardano: CardanoBlockTip) {
		self.cardano = cardano
	}
}

public struct CardanoGenesisShelley: Codable, Sendable {
	public let networkMagic: Int32

	public init(networkMagic: Int32) {
		self.networkMagic = networkMagic
	}
}

public struct CardanoGenesis: Codable, Sendable {
	public let shelley: CardanoGenesisShelley

	public init(shelley: CardanoGenesisShelley) {
		self.shelley = shelley
	}
}

public struct CardanoGenesisData: Codable, Sendable {
	public let genesis: CardanoGenesis

	public init(genesis: CardanoGenesis) {
		self.genesis = genesis
	}
}
