/*
 Generated by typeshare 1.11.0
 */

import Foundation

public struct CardanoAggregateSumValue: Codable, Sendable {
	public let value: String?

	public init(value: String?) {
		self.value = value
	}
}

public struct CardanoAggregateSum: Codable, Sendable {
	public let sum: CardanoAggregateSumValue

	public init(sum: CardanoAggregateSumValue) {
		self.sum = sum
	}
}

public struct CardanoAggregateBalance: Codable, Sendable {
	public let aggregate: CardanoAggregateSum

	public init(aggregate: CardanoAggregateSum) {
		self.aggregate = aggregate
	}
}

public struct CardanoBalance: Codable, Sendable {
	public let address: String
	public let txHash: String
	public let index: Int32

	public init(address: String, txHash: String, index: Int32) {
		self.address = address
		self.txHash = txHash
		self.index = index
	}
}

public struct CardanoBlock: Codable, Sendable {
	public let number: Int32

	public init(number: Int32) {
		self.number = number
	}
}

public struct CardanoBlockTip: Codable, Sendable {
	public let tip: CardanoBlock

	public init(tip: CardanoBlock) {
		self.tip = tip
	}
}

public struct CardanoBlockData: Codable, Sendable {
	public let cardano: CardanoBlockTip

	public init(cardano: CardanoBlockTip) {
		self.cardano = cardano
	}
}

public struct CardanoGenesisShelley: Codable, Sendable {
	public let networkMagic: Int32

	public init(networkMagic: Int32) {
		self.networkMagic = networkMagic
	}
}

public struct CardanoGenesis: Codable, Sendable {
	public let shelley: CardanoGenesisShelley

	public init(shelley: CardanoGenesisShelley) {
		self.shelley = shelley
	}
}

public struct CardanoGenesisData: Codable, Sendable {
	public let genesis: CardanoGenesis

	public init(genesis: CardanoGenesis) {
		self.genesis = genesis
	}
}

public struct CardanoSubmitTransactionHash: Codable, Sendable {
	public let hash: String

	public init(hash: String) {
		self.hash = hash
	}
}

public struct CardanoTransaction: Codable, Sendable {
	public let fee: String
	public let block: CardanoBlock

	public init(fee: String, block: CardanoBlock) {
		self.fee = fee
		self.block = block
	}
}

public struct CardanoTransactionBroadcast: Codable, Sendable {
	public let submitTransaction: CardanoSubmitTransactionHash

	public init(submitTransaction: CardanoSubmitTransactionHash) {
		self.submitTransaction = submitTransaction
	}
}

public struct CardanoTransactions: Codable, Sendable {
	public let transactions: [CardanoTransaction]

	public init(transactions: [CardanoTransaction]) {
		self.transactions = transactions
	}
}

public struct CardanoUTXO: Codable, Sendable {
	public let address: String
	public let txHash: String
	public let index: Int32
	public let value: String

	public init(address: String, txHash: String, index: Int32, value: String) {
		self.address = address
		self.txHash = txHash
		self.index = index
		self.value = value
	}
}

public struct CardanoUTXOS<T: Codable & Sendable>: Codable, Sendable {
	public let utxos: T

	public init(utxos: T) {
		self.utxos = utxos
	}
}
