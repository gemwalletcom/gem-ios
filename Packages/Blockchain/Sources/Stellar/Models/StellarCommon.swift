/*
 Generated by typeshare 1.13.2
 */

import Foundation

public struct StellarAsset: Codable, Sendable {
	public let asset_code: String
	public let asset_issuer: String
	public let contract_id: String?

	public init(asset_code: String, asset_issuer: String, contract_id: String?) {
		self.asset_code = asset_code
		self.asset_issuer = asset_issuer
		self.contract_id = contract_id
	}
}

public struct StellarRecords<T: Codable & Sendable>: Codable, Sendable {
	public let records: [T]

	public init(records: [T]) {
		self.records = records
	}
}

public struct StellarEmbedded<T: Codable & Sendable>: Codable, Sendable {
	public let _embedded: StellarRecords<T>

	public init(_embedded: StellarRecords<T>) {
		self._embedded = _embedded
	}
}
