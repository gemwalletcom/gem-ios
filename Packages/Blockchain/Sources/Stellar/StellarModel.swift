/*
 Generated by typeshare 1.12.0
 */

import Foundation

public struct StellarBalance: Codable, Sendable {
	public let balance: String
	public let asset_type: String
	public let asset_code: String?
	public let asset_issuer: String?

	public init(balance: String, asset_type: String, asset_code: String?, asset_issuer: String?) {
		self.balance = balance
		self.asset_type = asset_type
		self.asset_code = asset_code
		self.asset_issuer = asset_issuer
	}
}

public struct StellarAccount: Codable, Sendable {
	public let sequence: String
	public let balances: [StellarBalance]

	public init(sequence: String, balances: [StellarBalance]) {
		self.sequence = sequence
		self.balances = balances
	}
}

public struct StellarAsset: Codable, Sendable {
	public let asset_code: String
	public let asset_issuer: String
	public let contract_id: String?

	public init(asset_code: String, asset_issuer: String, contract_id: String?) {
		self.asset_code = asset_code
		self.asset_issuer = asset_issuer
		self.contract_id = contract_id
	}
}

public struct StellarRecords<T: Codable & Sendable>: Codable, Sendable {
	public let records: [T]

	public init(records: [T]) {
		self.records = records
	}
}

public struct StellarEmbedded<T: Codable & Sendable>: Codable, Sendable {
	public let _embedded: StellarRecords<T>

	public init(_embedded: StellarRecords<T>) {
		self._embedded = _embedded
	}
}

public struct StellarFeeCharged: Codable, Sendable {
	public let min: String
	public let p95: String

	public init(min: String, p95: String) {
		self.min = min
		self.p95 = p95
	}
}

public struct StellarFees: Codable, Sendable {
	public let last_ledger_base_fee: String
	public let fee_charged: StellarFeeCharged

	public init(last_ledger_base_fee: String, fee_charged: StellarFeeCharged) {
		self.last_ledger_base_fee = last_ledger_base_fee
		self.fee_charged = fee_charged
	}
}

public struct StellarNodeStatus: Codable, Sendable {
	public let ingest_latest_ledger: Int32
	public let network_passphrase: String

	public init(ingest_latest_ledger: Int32, network_passphrase: String) {
		self.ingest_latest_ledger = ingest_latest_ledger
		self.network_passphrase = network_passphrase
	}
}

public struct StellarTransactionBroadcast: Codable, Sendable {
	public let hash: String?
	public let title: String?

	public init(hash: String?, title: String?) {
		self.hash = hash
		self.title = title
	}
}

public struct StellarTransactionStatus: Codable, Sendable {
	public let successful: Bool
	public let fee_charged: String

	public init(successful: Bool, fee_charged: String) {
		self.successful = successful
		self.fee_charged = fee_charged
	}
}
