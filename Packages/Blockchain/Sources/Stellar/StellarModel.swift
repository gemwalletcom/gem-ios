/*
 Generated by typeshare 1.11.0
 */

import Foundation

public struct StellarBalance: Codable, Sendable {
	public let balance: String
	public let asset_type: String

	public init(balance: String, asset_type: String) {
		self.balance = balance
		self.asset_type = asset_type
	}
}

public struct StellarAccount: Codable, Sendable {
	public let sequence: String
	public let balances: [StellarBalance]

	public init(sequence: String, balances: [StellarBalance]) {
		self.sequence = sequence
		self.balances = balances
	}
}

public struct StellarAccountEmpty: Codable, Sendable {
	public let status: Int32

	public init(status: Int32) {
		self.status = status
	}
}

public struct StellarFeeCharged: Codable, Sendable {
	public let min: String
	public let p95: String

	public init(min: String, p95: String) {
		self.min = min
		self.p95 = p95
	}
}

public struct StellarFees: Codable, Sendable {
	public let last_ledger_base_fee: String
	public let fee_charged: StellarFeeCharged

	public init(last_ledger_base_fee: String, fee_charged: StellarFeeCharged) {
		self.last_ledger_base_fee = last_ledger_base_fee
		self.fee_charged = fee_charged
	}
}

public struct StellarNodeStatus: Codable, Sendable {
	public let ingest_latest_ledger: Int32
	public let network_passphrase: String

	public init(ingest_latest_ledger: Int32, network_passphrase: String) {
		self.ingest_latest_ledger = ingest_latest_ledger
		self.network_passphrase = network_passphrase
	}
}

public struct StellarTransactionBroadcast: Codable, Sendable {
	public let hash: String

	public init(hash: String) {
		self.hash = hash
	}
}

public struct StellarTransactionBroadcastError: Codable, Sendable {
	public let title: String

	public init(title: String) {
		self.title = title
	}
}

public struct StellarTransactionStatus: Codable, Sendable {
	public let successful: Bool
	public let fee_charged: String

	public init(successful: Bool, fee_charged: String) {
		self.successful = successful
		self.fee_charged = fee_charged
	}
}
