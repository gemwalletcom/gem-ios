/*
 Generated by typeshare 1.11.0
 */

import Foundation

public struct TronSmartContractCall: Codable, Sendable {
	public let contract_address: String
	public let function_selector: String
	public let parameter: String?
	public let fee_limit: UInt32?
	public let call_value: UInt32?
	public let owner_address: String
	public let visible: Bool?

	public init(contract_address: String, function_selector: String, parameter: String?, fee_limit: UInt32?, call_value: UInt32?, owner_address: String, visible: Bool?) {
		self.contract_address = contract_address
		self.function_selector = function_selector
		self.parameter = parameter
		self.fee_limit = fee_limit
		self.call_value = call_value
		self.owner_address = owner_address
		self.visible = visible
	}
}

public struct TronSmartContractResultMessage: Codable, Sendable {
	public let result: Bool
	public let message: String?

	public init(result: Bool, message: String?) {
		self.result = result
		self.message = message
	}
}

public struct TronSmartContractResult: Codable, Sendable {
	public let result: TronSmartContractResultMessage
	public let constant_result: [String]
	public let energy_used: Int32

	public init(result: TronSmartContractResultMessage, constant_result: [String], energy_used: Int32) {
		self.result = result
		self.constant_result = constant_result
		self.energy_used = energy_used
	}
}
