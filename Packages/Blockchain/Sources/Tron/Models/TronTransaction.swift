/*
 Generated by typeshare 1.13.2
 */

import Foundation

public struct TronReceipt: Codable, Sendable {
	public let result: String?

	public init(result: String?) {
		self.result = result
	}
}

public struct TronTransactionContractRef: Codable, Sendable {
	public let contractRet: String

	public init(contractRet: String) {
		self.contractRet = contractRet
	}
}

public struct TronTransaction: Codable, Sendable {
	public let ret: [TronTransactionContractRef]

	public init(ret: [TronTransactionContractRef]) {
		self.ret = ret
	}
}

public struct TronTransactionBroadcast: Codable, Sendable {
	public let result: Bool
	public let txid: String

	public init(result: Bool, txid: String) {
		self.result = result
		self.txid = txid
	}
}

public struct TronTransactionBroadcastError: Codable, Sendable {
	public let message: String

	public init(message: String) {
		self.message = message
	}
}

public struct TronTransactionReceipt: Codable, Sendable {
	public let blockNumber: UInt64
	public let fee: Int64?
	public let result: String?
	public let receipt: TronReceipt?

	public init(blockNumber: UInt64, fee: Int64?, result: String?, receipt: TronReceipt?) {
		self.blockNumber = blockNumber
		self.fee = fee
		self.result = result
		self.receipt = receipt
	}
}
