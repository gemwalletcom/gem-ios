/*
 Generated by typeshare 1.13.2
 */

import Foundation

public struct XRPAccount: Codable, Sendable {
	public let Balance: String
	public let Sequence: Int32
	public let OwnerCount: Int32

	public init(Balance: String, Sequence: Int32, OwnerCount: Int32) {
		self.Balance = Balance
		self.Sequence = Sequence
		self.OwnerCount = OwnerCount
	}
}

public struct XRPAssetLine: Codable, Sendable {
	public let currency: String

	public init(currency: String) {
		self.currency = currency
	}
}

public struct XRPAccountAsset: Codable, Sendable {
	public let LowLimit: XRPAssetLine

	public init(LowLimit: XRPAssetLine) {
		self.LowLimit = LowLimit
	}
}

public struct XRPAccountLine: Codable, Sendable {
	public let account: String
	public let balance: String
	public let currency: String

	public init(account: String, balance: String, currency: String) {
		self.account = account
		self.balance = balance
		self.currency = currency
	}
}

public struct XRPAccountLinesResult: Codable, Sendable {
	public let lines: [XRPAccountLine]?

	public init(lines: [XRPAccountLine]?) {
		self.lines = lines
	}
}

public struct XRPAccountObjects<T: Codable & Sendable>: Codable, Sendable {
	public let account_objects: T

	public init(account_objects: T) {
		self.account_objects = account_objects
	}
}

public struct XRPAccountResult: Codable, Sendable {
	public let account_data: XRPAccount?
	public let ledger_current_index: Int32

	public init(account_data: XRPAccount?, ledger_current_index: Int32) {
		self.account_data = account_data
		self.ledger_current_index = ledger_current_index
	}
}
