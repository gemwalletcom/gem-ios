/*
 Generated by typeshare 1.11.0
 */

import Foundation

public struct XRPAccount: Codable, Sendable {
	public let Balance: String
	public let Sequence: Int32

	public init(Balance: String, Sequence: Int32) {
		self.Balance = Balance
		self.Sequence = Sequence
	}
}

public struct XRPAccountResult: Codable, Sendable {
	public let account_data: XRPAccount

	public init(account_data: XRPAccount) {
		self.account_data = account_data
	}
}

public struct XRPDrops: Codable, Sendable {
	public let median_fee: String

	public init(median_fee: String) {
		self.median_fee = median_fee
	}
}

public struct XRPFee: Codable, Sendable {
	public let drops: XRPDrops

	public init(drops: XRPDrops) {
		self.drops = drops
	}
}

public struct XRPLatestBlock: Codable, Sendable {
	public let ledger_current_index: Int

	public init(ledger_current_index: Int) {
		self.ledger_current_index = ledger_current_index
	}
}

public struct XRPResult<T: Codable & Sendable>: Codable, Sendable {
	public let result: T

	public init(result: T) {
		self.result = result
	}
}

public struct XRPTransaction: Codable, Sendable {
	public let hash: String

	public init(hash: String) {
		self.hash = hash
	}
}

public struct XRPTransactionBroadcast: Codable, Sendable {
	public let accepted: Bool
	public let engine_result_message: String?
	public let tx_json: XRPTransaction?

	public init(accepted: Bool, engine_result_message: String?, tx_json: XRPTransaction?) {
		self.accepted = accepted
		self.engine_result_message = engine_result_message
		self.tx_json = tx_json
	}
}

public struct XRPTransactionStatus: Codable, Sendable {
	public let status: String

	public init(status: String) {
		self.status = status
	}
}
