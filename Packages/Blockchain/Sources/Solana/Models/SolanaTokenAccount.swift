/*
 Generated by typeshare 1.11.0
 */

import Foundation

public struct SolanaStakeAccountDataParsedInfoStakeDelegation: Codable, Sendable {
	public let voter: String
	public let stake: String
	public let activationEpoch: String
	public let deactivationEpoch: String

	public init(voter: String, stake: String, activationEpoch: String, deactivationEpoch: String) {
		self.voter = voter
		self.stake = stake
		self.activationEpoch = activationEpoch
		self.deactivationEpoch = deactivationEpoch
	}
}

public struct SolanaStakeAccountDataParsedInfoStake: Codable, Sendable {
	public let delegation: SolanaStakeAccountDataParsedInfoStakeDelegation

	public init(delegation: SolanaStakeAccountDataParsedInfoStakeDelegation) {
		self.delegation = delegation
	}
}

public struct SolanaStakeAccountDataParsedInfoMeta: Codable, Sendable {
	public let rentExemptReserve: String

	public init(rentExemptReserve: String) {
		self.rentExemptReserve = rentExemptReserve
	}
}

public struct SolanaStakeAccountDataParsedInfo: Codable, Sendable {
	public let stake: SolanaStakeAccountDataParsedInfoStake
	public let meta: SolanaStakeAccountDataParsedInfoMeta

	public init(stake: SolanaStakeAccountDataParsedInfoStake, meta: SolanaStakeAccountDataParsedInfoMeta) {
		self.stake = stake
		self.meta = meta
	}
}

public struct SolanaStakeAccountDataParsed: Codable, Sendable {
	public let info: SolanaStakeAccountDataParsedInfo

	public init(info: SolanaStakeAccountDataParsedInfo) {
		self.info = info
	}
}

public struct SolanaStakeAccountData: Codable, Sendable {
	public let parsed: SolanaStakeAccountDataParsed

	public init(parsed: SolanaStakeAccountDataParsed) {
		self.parsed = parsed
	}
}

public struct SolanaStakeAccount: Codable, Sendable {
	public let lamports: Int
	public let space: Int32
	public let data: SolanaStakeAccountData

	public init(lamports: Int, space: Int32, data: SolanaStakeAccountData) {
		self.lamports = lamports
		self.space = space
		self.data = data
	}
}

public struct SolanaTokenAccount: Codable, Sendable {
	public let pubkey: String

	public init(pubkey: String) {
		self.pubkey = pubkey
	}
}

public struct SolanaTokenAccountResult<T: Codable & Sendable>: Codable, Sendable {
	public let account: T
	public let pubkey: String

	public init(account: T, pubkey: String) {
		self.account = account
		self.pubkey = pubkey
	}
}
