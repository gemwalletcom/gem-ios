/*
 Generated by typeshare 1.13.2
 */

import Foundation

public struct CosmosAccount: Codable, Sendable {
	public let account_number: String
	public let sequence: String

	public init(account_number: String, sequence: String) {
		self.account_number = account_number
		self.sequence = sequence
	}
}

public struct CosmosAccountResponse<T: Codable & Sendable>: Codable, Sendable {
	public let account: T

	public init(account: T) {
		self.account = account
	}
}

public struct CosmosBalance: Codable, Sendable {
	public let denom: String
	public let amount: String

	public init(denom: String, amount: String) {
		self.denom = denom
		self.amount = amount
	}
}

public struct CosmosBalances: Codable, Sendable {
	public let balances: [CosmosBalance]

	public init(balances: [CosmosBalance]) {
		self.balances = balances
	}
}

public struct CosmosInjectiveAccount: Codable, Sendable {
	public let base_account: CosmosAccount

	public init(base_account: CosmosAccount) {
		self.base_account = base_account
	}
}
