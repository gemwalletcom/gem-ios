/*
 Generated by typeshare 1.12.0
 */

import Foundation

public struct MarketDominance: Codable, Equatable, Hashable, Sendable {
	public let assetId: String
	public let dominance: Float

	public init(assetId: String, dominance: Float) {
		self.assetId = assetId
		self.dominance = dominance
	}
}

public struct MarketsAssets: Codable, Equatable, Hashable, Sendable {
	public let trending: [String]
	public let gainers: [String]
	public let losers: [String]

	public init(trending: [String], gainers: [String], losers: [String]) {
		self.trending = trending
		self.gainers = gainers
		self.losers = losers
	}
}

public struct Markets: Codable, Equatable, Hashable, Sendable {
	public let marketCap: Float
	public let marketCapChangePercentage24h: Float
	public let assets: MarketsAssets
	public let dominance: [MarketDominance]
	public let totalVolume24h: Float

	public init(marketCap: Float, marketCapChangePercentage24h: Float, assets: MarketsAssets, dominance: [MarketDominance], totalVolume24h: Float) {
		self.marketCap = marketCap
		self.marketCapChangePercentage24h = marketCapChangePercentage24h
		self.assets = assets
		self.dominance = dominance
		self.totalVolume24h = totalVolume24h
	}
}
