/*
 Generated by typeshare 1.13.2
 */

import Foundation

public struct Perpetual: Codable, Equatable, Sendable {
	public let id: String
	public let name: String
	public let provider: PerpetualProvider
	public let asset_id: AssetId
	public let price: Double
	public let price_percent_change_24h: Double
	public let open_interest: Double
	public let volume_24h: Double
	public let leverage: [UInt8]

	public init(id: String, name: String, provider: PerpetualProvider, asset_id: AssetId, price: Double, price_percent_change_24h: Double, open_interest: Double, volume_24h: Double, leverage: [UInt8]) {
		self.id = id
		self.name = name
		self.provider = provider
		self.asset_id = asset_id
		self.price = price
		self.price_percent_change_24h = price_percent_change_24h
		self.open_interest = open_interest
		self.volume_24h = volume_24h
		self.leverage = leverage
	}
}

public struct PerpetualPositionData: Codable, Equatable, Sendable {
	public let position: PerpetualPosition
	public let perpetual: Perpetual

	public init(position: PerpetualPosition, perpetual: Perpetual) {
		self.position = position
		self.perpetual = perpetual
	}
}
