/*
 Generated by typeshare 1.13.2
 */

import Foundation

public struct Perpetual: Codable, Equatable, Hashable, Sendable {
	public let id: String
	public let name: String
	public let provider: PerpetualProvider
	public let assetId: AssetId
	public let price: Double
	public let pricePercentChange24h: Double
	public let openInterest: Double
	public let volume24h: Double
	public let funding: Double
	public let leverage: [UInt8]

	public init(id: String, name: String, provider: PerpetualProvider, assetId: AssetId, price: Double, pricePercentChange24h: Double, openInterest: Double, volume24h: Double, funding: Double, leverage: [UInt8]) {
		self.id = id
		self.name = name
		self.provider = provider
		self.assetId = assetId
		self.price = price
		self.pricePercentChange24h = pricePercentChange24h
		self.openInterest = openInterest
		self.volume24h = volume24h
		self.funding = funding
		self.leverage = leverage
	}
}

public struct PerpetualPositionData: Codable, Equatable, Hashable, Sendable {
	public let perpetual: Perpetual
	public let positions: [PerpetualPosition]

	public init(perpetual: Perpetual, positions: [PerpetualPosition]) {
		self.perpetual = perpetual
		self.positions = positions
	}
}
