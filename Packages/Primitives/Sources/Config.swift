/*
 Generated by typeshare 1.11.0
 */

import Foundation

public struct ConfigAppVersion: Codable, Sendable {
	public let production: String
	public let beta: String
	public let alpha: String

	public init(production: String, beta: String, alpha: String) {
		self.production = production
		self.beta = beta
		self.alpha = alpha
	}
}

public struct ConfigAndroidApp: Codable, Sendable {
	public let version: ConfigAppVersion

	public init(version: ConfigAppVersion) {
		self.version = version
	}
}

public struct ConfigIOSApp: Codable, Sendable {
	public let version: ConfigAppVersion

	public init(version: ConfigAppVersion) {
		self.version = version
	}
}

public struct ConfigApp: Codable, Sendable {
	public let ios: ConfigIOSApp
	public let android: ConfigAndroidApp

	public init(ios: ConfigIOSApp, android: ConfigAndroidApp) {
		self.ios = ios
		self.android = android
	}
}

public struct Release: Codable, Sendable {
	public let version: String
	public let store: PlatformStore
	public let upgradeRequired: Bool

	public init(version: String, store: PlatformStore, upgradeRequired: Bool) {
		self.version = version
		self.store = store
		self.upgradeRequired = upgradeRequired
	}
}

public struct ConfigVersions: Codable, Sendable {
	public let fiatAssets: Int32
	public let swapAssets: Int32

	public init(fiatAssets: Int32, swapAssets: Int32) {
		self.fiatAssets = fiatAssets
		self.swapAssets = swapAssets
	}
}

public struct ConfigResponse: Codable, Sendable {
	public let app: ConfigApp
	public let releases: [Release]
	public let versions: ConfigVersions

	public init(app: ConfigApp, releases: [Release], versions: ConfigVersions) {
		self.app = app
		self.releases = releases
		self.versions = versions
	}
}
