/*
 Generated by typeshare 1.13.2
 */

import Foundation

public struct WCEthereumTransaction: Codable, Equatable, Hashable, Sendable {
	public let chainId: String?
	public let from: String
	public let to: String
	public let value: String?
	public let gas: String?
	public let gasLimit: String?
	public let gasPrice: String?
	public let maxFeePerGas: String?
	public let maxPriorityFeePerGas: String?
	public let nonce: String?
	public let data: String?

	public init(chainId: String?, from: String, to: String, value: String?, gas: String?, gasLimit: String?, gasPrice: String?, maxFeePerGas: String?, maxPriorityFeePerGas: String?, nonce: String?, data: String?) {
		self.chainId = chainId
		self.from = from
		self.to = to
		self.value = value
		self.gas = gas
		self.gasLimit = gasLimit
		self.gasPrice = gasPrice
		self.maxFeePerGas = maxFeePerGas
		self.maxPriorityFeePerGas = maxPriorityFeePerGas
		self.nonce = nonce
		self.data = data
	}
}

public struct WCSolanaSignMessage: Codable, Equatable, Hashable, Sendable {
	public let message: String
	public let pubkey: String

	public init(message: String, pubkey: String) {
		self.message = message
		self.pubkey = pubkey
	}
}

public struct WCSolanaSignMessageResult: Codable, Equatable, Hashable, Sendable {
	public let signature: String

	public init(signature: String) {
		self.signature = signature
	}
}

public struct WCSolanaTransaction: Codable, Equatable, Hashable, Sendable {
	public let transaction: String

	public init(transaction: String) {
		self.transaction = transaction
	}
}

public struct WCSolanaTransactions: Codable, Equatable, Hashable, Sendable {
	public let transactions: [String]

	public init(transactions: [String]) {
		self.transactions = transactions
	}
}

public struct WCSuiSignAndExecuteTransactionResult: Codable, Equatable, Hashable, Sendable {
	public let digest: String

	public init(digest: String) {
		self.digest = digest
	}
}

public struct WCSuiSignMessage: Codable, Equatable, Hashable, Sendable {
	public let message: String
	public let account: String

	public init(message: String, account: String) {
		self.message = message
		self.account = account
	}
}

public struct WCSuiSignMessageResult: Codable, Equatable, Hashable, Sendable {
	public let signature: String

	public init(signature: String) {
		self.signature = signature
	}
}

public struct WCSuiSignTransactionResult: Codable, Equatable, Hashable, Sendable {
	public let signature: String
	public let transactionBytes: String

	public init(signature: String, transactionBytes: String) {
		self.signature = signature
		self.transactionBytes = transactionBytes
	}
}

public struct WCSuiTransaction: Codable, Equatable, Hashable, Sendable {
	public let transaction: String
	public let address: String

	public init(transaction: String, address: String) {
		self.transaction = transaction
		self.address = address
	}
}

public enum WalletConnectCAIP2: String, Codable, Sendable {
	case eip155
	case solana
	case cosmos
	case algorand
	case sui
}
